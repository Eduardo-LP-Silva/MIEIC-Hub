DROP TYPE IF EXISTS PackageStatus CASCADE;

DROP TABLE IF EXISTS "User" CASCADE;
DROP TABLE IF EXISTS StockManager CASCADE;
DROP TABLE IF EXISTS Moderator CASCADE;
DROP TABLE IF EXISTS SubmissionManager CASCADE;
DROP TABLE IF EXISTS Category CASCADE;
DROP TABLE IF EXISTS Color CASCADE;
DROP TABLE IF EXISTS Size CASCADE;
DROP TABLE IF EXISTS Product CASCADE;
DROP TABLE IF EXISTS Photo CASCADE;
DROP TABLE IF EXISTS ProductColor CASCADE;
DROP TABLE IF EXISTS ProductSize CASCADE;
DROP TABLE IF EXISTS City CASCADE;
DROP TABLE IF EXISTS DeliveryInfo CASCADE;
DROP TABLE IF EXISTS Purchase CASCADE;
DROP TABLE IF EXISTS ProductPurchase CASCADE;
DROP TABLE IF EXISTS Review CASCADE;
DROP TABLE IF EXISTS Cart CASCADE;
DROP TABLE IF EXISTS Wishlist CASCADE;
DROP TABLE IF EXISTS FAQ CASCADE;
DROP TABLE IF EXISTS Poll CASCADE;
DROP TABLE IF EXISTS Submission CASCADE;
DROP TABLE IF EXISTS UserSubVote CASCADE;

CREATE TYPE PackageStatus AS ENUM ('AwaitingPayment', 'Processing', 'InTransit', 'Delivered', 'Canceled');

CREATE TABLE Users
(
    id_user SERIAL PRIMARY KEY,
    username TEXT UNIQUE NOT NULL,
    email TEXT UNIQUE NOT NULL,
    pw TEXT NOT NULL,
    birth_date DATE NOT NULL,
    active BOOLEAN NOT NULL 
    stock_manager BOOLEAN NOT NULL,
    moderator BOOLEAN NOT NULL,
    submission_manager BOOLEAN NOT NULL
);

CREATE TABLE Category
(
    id_category SERIAL PRIMARY KEY,
    category TEXT UNIQUE NOT NULL
);

CREATE TABLE Color
(
    id_color SERIAL PRIMARY KEY,
    color TEXT UNIQUE NOT NULL
);

CREATE TABLE Size
(
    id_size SERIAL PRIMARY KEY,
    size TEXT UNIQUE NOT NULL
);

CREATE TABLE Photo 
(
    id_photo SERIAL PRIMARY KEY,
    image_path TEXT UNIQUE NOT NULL,
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE
);

CREATE TABLE Product
(
    id_product SERIAL PRIMARY KEY,
    product_name TEXT NOT NULL,
    product_description TEXT NOT NULL,
    price FLOAT NOT NULL CHECK(price > 0),
    stock INTEGER NOT NULL CHECK(stock >= 0),
    rating FLOAT NOT NULL CHECK(rating >= 0 AND rating <= 5),
    id_category INTEGER NOT NULL REFERENCES Category ON UPDATE CASCADE
);

CREATE TABLE Photo 
(
    idPhoto SERIAL PRIMARY KEY,
    imagePath TEXT UNIQUE NOT NULL,
    idProduct INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE
);

CREATE TABLE ProductColor
(
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE ON DELETE CASCADE,
    id_color INTEGER NOT NULL REFERENCES Color ON UPDATE CASCADE,
    PRIMARY KEY (id_product, id_color) 
);

CREATE TABLE ProductSize
(
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE ON DELETE CASCADE,
    id_size INTEGER NOT NULL REFERENCES Size ON UPDATE CASCADE,
    PRIMARY KEY (id_product, id_size)
);

CREATE TABLE City
(
    id_city SERIAL PRIMARY KEY,
    city TEXT NOT NULL
);

CREATE TABLE DeliveryInfo
(
    id_delivery_info SERIAL PRIMARY KEY,
    id_city INTEGER NOT NULL REFERENCES City ON UPDATE CASCADE,
    contact TEXT NOT NULL,
    delivery_address TEXT NOT NULL
);

CREATE TABLE UserDeliveryInfo
(
    id_delivery_info INTEGER NOT NULL REFERENCES DeliveryInfo ON UPDATE CASCADE,
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE,
    PRIMARY KEY (id_delivery_info, id_user)
);

CREATE TABLE Purchase
(
    id_purchase SERIAL PRIMARY KEY,
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE,
    id_deli_info INTEGER NOT NULL REFERENCES DeliveryInfo ON UPDATE CASCADE,
    purchase_date TIMESTAMP WITH TIME zone DEFAULT now() NOT NULL,
    total FLOAT NOT NULL CHECK(total >= 0),
    status package_status NOT NULL
);

CREATE TABLE ProductPurchase
(
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE,
    id_purchase INTEGER NOT NULL REFERENCES Purchase ON UPDATE CASCADE,
    quantity INTEGER NOT NULL CHECK(quantity > 0),
    price FLOAT NOT NULL CHECK(price > 0),
    id_size INTEGER REFERENCES Size ON UPDATE CASCADE,
    id_color INTEGER REFERENCES Color ON UPDATE CASCADE,
    PRIMARY KEY (id_product, id_purchase)
);

CREATE TABLE Review
(
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE,
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE,
    comment TEXT NOT NULL,
    review_date TIMESTAMP WITH TIME zone DEFAULT now() NOT NULL,
    rating INTEGER NOT NULL CHECK(rating > 0 AND rating <= 5),
    PRIMARY KEY (id_user, id_product)
);

CREATE TABLE Cart
(
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE ON DELETE CASCADE,
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE,
    quantity INTEGER NOT NULL CHECK(quantity > 0),
    id_color INTEGER NOT NULL REFERENCES Color ON UPDATE CASCADE,
    id_size INTEGER NOT NULL REFERENCES Size ON UPDATE Cascade,
    PRIMARY KEY (id_user, id_product)
);

CREATE TABLE Wishlist
(
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE ON DELETE CASCADE,
    id_product INTEGER NOT NULL REFERENCES Product ON UPDATE CASCADE,
    PRIMARY KEY (id_user, id_product)
);

CREATE TABLE FAQ
(
    id_question SERIAL PRIMARY KEY,
    question TEXT UNIQUE NOT NULL,
    answer TEXT NOT NULL 
);

CREATE TABLE Poll
(
    id_poll SERIAL PRIMARY KEY,
    poll_name TEXT UNIQUE NOT NULL,
    poll_date DATE NOT NULL,
    expiration DATE NOT NULL,
    active BOOLEAN NOT NULL
);

CREATE TABLE Submission
(
    id_submission SERIAL PRIMARY KEY,
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE,
    submission_name TEXT NOT NULL,
    id_category INTEGER NOT NULL REFERENCES Category ON UPDATE CASCADE,
    submission_description TEXT NOT NULL,
    picture TEXT NOT NULL,
    submission_date TIMESTAMP WITH TIME zone DEFAULT now() NOT NULL,
    accepted BOOLEAN NOT NULL,
    votes INTEGER DEFAULT 0 NOT NULL CHECK(votes >= 0),
    winner BOOLEAN NOT NULL,
    id_poll INTEGER NOT NULL REFERENCES Poll ON UPDATE CASCADE
);

CREATE TABLE UserSubVote
(
    id_user INTEGER NOT NULL REFERENCES Users ON UPDATE CASCADE,
    id_sub INTEGER NOT NULL REFERENCES Submission ON UPDATE CASCADE,
    PRIMARY KEY (id_user, id_sub)
);
CREATE INDEX email ON "User" USING hash (email);
